(self.webpackChunkgerstner_waves_rf3=self.webpackChunkgerstner_waves_rf3||[]).push([[335],{6725:(e,n,t)=>{"use strict";t.d(n,{A:()=>c});t(5043);var r=t(7528);const o={black:"#0C0F13",accent:"#F5B82E",bg:"#f5f5f5"};var i;const a=t(6712).Ay.div(i||(i=(0,r.A)(["\n  height: 100vh;\n  background-color: ",";\n\n  overflow: hidden;\n"])),o.bg);var s=t(579);const c=e=>{let{children:n}=e;return(0,s.jsx)(a,{children:n})}},5953:(e,n,t)=>{"use strict";t.d(n,{A:()=>l});t(5043);var r=t(4672),o=t(7),i=t(579);var a,s=t(7528);const c=t(6712).Ay.div(a||(a=(0,s.A)(["\n  width: 100%;\n  height: 100%;\n\n  background-color: #f5f5f5;\n"]))),l=e=>{let{children:n}=e;return(0,i.jsx)(c,{children:(0,i.jsxs)(r.Hl,{camera:{position:[75,25,25]},children:[(0,i.jsx)(o.N,{minDistance:15,maxDistance:150,maxPolarAngle:Math.PI/2.5}),n,null]})})}},540:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});var r=t(5043),o=t(1483),i=t(579);const a=()=>(0,i.jsx)(i.Fragment,{children:(0,i.jsx)(o.m,{distance:45e4,sunPosition:[1e3,1e3,8e3],inclination:10,turbidity:.5})}),s=(0,r.memo)(a)},4686:(e,n,t)=>{"use strict";t.d(n,{A:()=>m});var r=t(5043),o=t(7051),i=t(3986),a=t(9204),s=t(4672),c=t(579);const l=["model"],v=(0,r.forwardRef)(((e,n)=>{let{model:r}=e,v=(0,i.A)(e,l);const u=(0,s.pn)(a.w,t(7699)("./".concat(r)));return(0,c.jsx)("primitive",(0,o.A)({ref:n,object:u},v))})),u=(0,r.memo)(v),m=e=>{let{getWaveInfo:n}=e;const t=r.useRef(),o=r.useRef();return(0,s.j$)((e=>{let{clock:r}=e;const i=n(0,0,r.getElapsedTime()),a=n(0,256,r.getElapsedTime());null!==t&&void 0!==t&&t.current&&null!==o&&void 0!==o&&o.current&&(o.current.position.set(1.15*-a.x,a.y,256),t.current.position.set(i.x,i.y+7,i.z),t.current.lookAt(o.current.position))})),(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)("mesh",{ref:o,children:[(0,c.jsx)("planeBufferGeometry",{args:[256,256]}),(0,c.jsx)("meshStandardMaterial",{opacity:0,transparent:!0})]}),(0,c.jsx)(u,{ref:t,model:"ship.fbx",scale:[.5,.5,.5]})]})}},1944:(e,n,t)=>{"use strict";t.d(n,{A:()=>l});var r=t(7051),o=t(5043),i=t(9408),a=t(4672),s=t(9838);var c=t(579);(0,a.X$)({Water:s.E});const l=e=>{let{wireframe:n,size:s,waveA:l,waveB:v,waveC:u}=e;const m=(0,o.useRef)(),f=(0,a.yk)((e=>e.gl)),d=(0,a.pn)(i.TextureLoader,t(7413));d.wrapS=d.wrapT=i.RepeatWrapping;const p=(0,o.useCallback)((e=>{e.uniforms.waveA={value:[Math.sin(l.direction*Math.PI/180),Math.cos(l.direction*Math.PI/180),l.steepness,l.wavelength]},e.uniforms.waveB={value:[Math.sin(v.direction*Math.PI/180),Math.cos(v.direction*Math.PI/180),v.steepness,v.wavelength]},e.uniforms.waveC={value:[Math.sin(u.direction*Math.PI/180),Math.cos(u.direction*Math.PI/180),u.steepness,u.wavelength]},e.vertexShader="\nuniform mat4 textureMatrix;\nuniform float time;\n\nvarying vec4 mirrorCoord;\nvarying vec4 worldPosition;\n\n#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n\nuniform vec4 waveA;\nuniform vec4 waveB;\nuniform vec4 waveC;\n\nvec3 GerstnerWave (vec4 wave, vec3 p) {\n    float steepness = wave.z;\n    float wavelength = wave.w;\n    float k = 2.0 * PI / wavelength;\n    float c = sqrt(9.8 / k);\n    vec2 d = normalize(wave.xy);\n    float f = k * (dot(d, vec2(p.x, p.y)) - c * time);\n    float a = steepness / k;\n\n    return vec3(\n        d.x * (a * cos(f)),\n        d.y * (a * cos(f)),\n        a * sin(f)\n    );\n}\n\nvoid main() {\n    mirrorCoord = modelMatrix * vec4( position, 1.0 );\n    worldPosition = mirrorCoord.xyzw;\n    mirrorCoord = textureMatrix * mirrorCoord;\n\n    vec3 gridPoint = position.xyz;\n    vec3 tangent = vec3(1, 0, 0);\n    vec3 binormal = vec3(0, 0, 1);\n    vec3 p = gridPoint;\n    p += GerstnerWave(waveA, gridPoint);\n    p += GerstnerWave(waveB, gridPoint);\n    p += GerstnerWave(waveC, gridPoint);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( p.x, p.y, p.z, 1.0);\n\n    #include <beginnormal_vertex>\n    #include <defaultnormal_vertex>\n    #include <logdepthbuf_vertex>\n    #include <fog_vertex>\n    #include <shadowmap_vertex>\n}\n",e.fragmentShader="\nuniform sampler2D mirrorSampler;\nuniform float alpha;\nuniform float time;\nuniform float size;\nuniform float distortionScale;\nuniform sampler2D normalSampler;\nuniform vec3 sunColor;\nuniform vec3 sunDirection;\nuniform vec3 eye;\nuniform vec3 waterColor;\n\nvarying vec4 mirrorCoord;\nvarying vec4 worldPosition;\n\nuniform float offsetX;\nuniform float offsetZ;\n\nvec4 getNoise( vec2 uv ) {\n    vec2 uv0 = ( uv / 103.0 ) + vec2(time / 17.0, time / 29.0);\n    vec2 uv1 = uv / 107.0-vec2( time / -19.0, time / 31.0 );\n    vec2 uv2 = uv / vec2( 8907.0, 9803.0 ) + vec2( time / 101.0, time / 97.0 );\n    vec2 uv3 = uv / vec2( 1091.0, 1027.0 ) - vec2( time / 109.0, time / -113.0 );\n    vec4 noise = texture2D( normalSampler, uv0 ) +\n        texture2D( normalSampler, uv1 ) +\n        texture2D( normalSampler, uv2 ) +\n        texture2D( normalSampler, uv3 );\n    return noise * 0.5 - 1.0;\n}\n\nvoid sunLight( const vec3 surfaceNormal, const vec3 eyeDirection, float shiny, float spec, float diffuse, inout vec3 diffuseColor, inout vec3 specularColor ) {\n    vec3 reflection = normalize( reflect( -sunDirection, surfaceNormal ) );\n    float direction = max( 0.0, dot( eyeDirection, reflection ) );\n    specularColor += pow( direction, shiny ) * sunColor * spec;\n    diffuseColor += max( dot( sunDirection, surfaceNormal ), 0.0 ) * sunColor * diffuse;\n}\n\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvoid main() {\n\n    #include <logdepthbuf_fragment>\n\n    vec4 noise = getNoise( (worldPosition.xz) + vec2(offsetX/12.25,offsetZ/12.25) * size );\n    vec3 surfaceNormal = normalize( noise.xzy * vec3( 1.5, 1.0, 1.5 ) );\n\n    vec3 diffuseLight = vec3(0.0);\n    vec3 specularLight = vec3(0.0);\n\n    vec3 worldToEye = eye-worldPosition.xyz;\n    vec3 eyeDirection = normalize( worldToEye );\n    sunLight( surfaceNormal, eyeDirection, 100.0, 2.0, 0.5, diffuseLight, specularLight );\n\n    float distance = length(worldToEye);\n\n    vec2 distortion = surfaceNormal.xz * ( 0.001 + 1.0 / distance ) * distortionScale;\n    vec3 reflectionSample = vec3( texture2D( mirrorSampler, mirrorCoord.xy / mirrorCoord.w + distortion ) );\n\n    float theta = max( dot( eyeDirection, surfaceNormal ), 0.0 );\n    float rf0 = 0.3;\n    float reflectance = rf0 + ( 1.0 - rf0 ) * pow( ( 1.0 - theta ), 5.0 );\n    vec3 scatter = max( 0.0, dot( surfaceNormal, eyeDirection ) ) * waterColor;\n    vec3 albedo = mix( ( sunColor * diffuseLight * 0.3 + scatter ) * getShadowMask(), ( vec3( 0.1 ) + reflectionSample * 0.9 + reflectionSample * specularLight ), reflectance);\n    vec3 outgoingLight = albedo;\n    gl_FragColor = vec4( outgoingLight, alpha );\n\n    #include <tonemapping_fragment>\n    #include <fog_fragment>\n}\n",e.uniforms.size.value=0}),[l,v,u]),h=(0,o.useMemo)((()=>new i.PlaneGeometry(s,s,s/4,s/4)),[s]),g=(0,o.useMemo)((()=>({textureWidth:256,textureHeight:256,waterNormals:d,sunDirection:new i.Vector3,side:i.DoubleSide,waterColor:"#102E4A",sunColor:"#eb8934",distortionScale:8,fog:void 0,format:f.outputEncoding,onBeforeCompile:p})),[d,l,v,u]);return(0,o.useEffect)((()=>{if(!m.current)return;m.current.material.wireframe=n}),[s,n,l,v,u]),(0,a.j$)((e=>{let{clock:n}=e;if(!m.current)return;const t=m.current.material;t.uniforms.time.value=n.getElapsedTime(),t.onBeforeCompile=p})),(0,c.jsx)("water",{ref:m,args:[h,(0,r.A)({},g)],"rotation-x":-Math.PI/2,position:[0,2,0]})}},5335:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>p});var r=t(5043),o=t(6050),i=t(6725),a=t(5953),s=t(540),c=t(4686),l=t(1944),v=t(9408),u=t(579);const m=(0,r.createContext)({waveA:{direction:0,steepness:0,wavelength:100},waveB:{direction:0,steepness:0,wavelength:100},waveC:{direction:0,steepness:0,wavelength:100},getWaveInfo:(e,n,t)=>new v.Vector3}),f=e=>{let{children:n}=e;const t=(0,o._5)("Wave A",{direction:{label:"Direction",value:0,step:1,min:0,max:359},steepness:{label:"Steepness",value:.15,step:.01,min:0,max:1},wavelength:{label:"Wave Length",value:100,step:1,min:1,max:100}}),r=(0,o._5)("Wave B",{direction:{label:"Direction",value:30,step:1,min:0,max:359},steepness:{label:"Steepness",value:.15,step:.01,min:0,max:1},wavelength:{label:"Wave Length",value:50,step:1,min:1,max:100}}),i=(0,o._5)("Wave C",{direction:{label:"Direction",value:60,step:1,min:0,max:359},steepness:{label:"Steepness",value:.15,step:.01,min:0,max:1},wavelength:{label:"Wave Length",value:25,step:1,min:1,max:100}});return(0,u.jsx)(m.Provider,{value:{waveA:t,waveB:r,waveC:i,getWaveInfo:(e,n,o)=>{const a=new v.Vector3,s=new v.Vector3(1,0,0),c=new v.Vector3(0,0,1);return[t,r,i].forEach((t=>{const r=2*Math.PI/t.wavelength,i=Math.sqrt(9.8/r),l=new v.Vector2(Math.sin(t.direction*Math.PI/180),-Math.cos(t.direction*Math.PI/180)),u=r*(l.dot(new v.Vector2(e,n))-i*o),m=t.steepness/r;a.x+=l.x*(m*Math.cos(u)),a.y+=m*Math.sin(u),a.z+=l.y*(m*Math.cos(u)),s.x+=-l.x*l.x*(t.steepness*Math.sin(u)),s.y+=l.x*(t.steepness*Math.cos(u)),s.z+=-l.x*l.y*(t.steepness*Math.sin(u)),c.x+=-l.x*l.y*(t.steepness*Math.sin(u)),c.y+=l.y*(t.steepness*Math.cos(u)),c.z+=-l.y*l.y*(t.steepness*Math.sin(u))})),a}},children:n})},d=()=>{const{wireframe:e,size:n}=(0,o._5)("Water",{size:{label:"Water Area",value:512,min:64,max:1024,step:1},wireframe:{label:"Wireframe",value:!1}}),{waveA:t,waveB:v,waveC:f,getWaveInfo:d}=(0,r.useContext)(m);return(0,u.jsx)(i.A,{children:(0,u.jsxs)(a.A,{children:[(0,u.jsx)("ambientLight",{intensity:.15,position:[100,100,100]}),(0,u.jsx)("pointLight",{position:[100,100,100],intensity:.5}),(0,u.jsx)(s.A,{}),(0,u.jsx)(c.A,{getWaveInfo:d}),(0,u.jsx)(l.A,{waveA:t,waveB:v,waveC:f,wireframe:e,size:n})]})})},p=()=>(0,u.jsx)(u.Fragment,{children:(0,u.jsx)(f,{children:(0,u.jsx)(d,{})})})},7699:(e,n,t)=>{var r={"./ship.fbx":7611};function o(e){var n=i(e);return t(n)}function i(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}o.keys=function(){return Object.keys(r)},o.resolve=i,e.exports=o,o.id=7699},7611:(e,n,t)=>{"use strict";e.exports=t.p+"static/media/ship.679585528f34ff916505.fbx"},7413:(e,n,t)=>{"use strict";e.exports=t.p+"static/media/waternormals.537ec85b965d414829ab.jpg"}}]);
//# sourceMappingURL=335.4ad6e403.chunk.js.map